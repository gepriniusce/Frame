apply plugin: 'com.android.application'
//如果你上一步 optimizeInit(true) 传入的是 true, 那么你必须配置此 Gradle 插件
apply plugin: 'com.xiaojinzi.component.plugin'

def appId = rootProject.ext.appId
def androidId = rootProject.ext.androidId
def supportDependencies = rootProject.ext.supportDependencies
def testDependencies = rootProject.ext.testDependencies


android {
    compileSdkVersion androidId.compileSdkVersion

    defaultConfig {
        applicationId appId.appId
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        testInstrumentationRunner androidId.testInstrumentationRunner

        //资源前缀，防止资源名字冲突 只能限定Xml资源，并不能限定图片资源，图片资源扔需要自身注意设置前缀名。
        resourcePrefix "app_"

        javaCompileOptions {
            annotationProcessorOptions {
                //打包，生成文档
                arguments = [HOST: "app", "RouterDoc": componnet_router_doc_folder]
            }
        }

        //開啟分包
        multiDexEnabled true
        //設置分包配置
//        multiDexKeepFile file('multidex-config.txt')

        //將svg圖片聲稱 指定緯度的png的圖片
//        vectorDrawables.generatedDensities('xhdpi','xxdpi')
        //使用support-v7兼容（5.0版本以上）
        vectorDrawables.useSupportLibrary = true

        resConfigs('zh-rCN')

        //配置so庫CPU架構（真機：arm,模擬器：x86）
        ndk {
            abiFilters('armeabi', 'armeabi-v7a')
            abiFilters('x86', 'x86_64')
        }


    }

    //簽名配置(必須寫在buildTypes之前)
    signingConfigs {
        debug {
            //默認debug簽名的密碼
//            storeFile file('/Users/tongson/.android/debug.keystore')
//            storePassword "android"
//            keyAlias "androiddebugkey"
//            keyPassword "android"
            //簽名證書文件
            storeFile file(TONGSON_FILE)
            //簽名證書文件的密碼
            storePassword TONGSON_STORE_PASSWORD
            //簽名證書中密鑰別名
            keyAlias TONGSON_KEY_ALIAS
            //簽名證書中該密鑰的密碼
            keyPassword TONGSON_KEY_PASSWORD
        }

        release {
            //簽名證書文件
            storeFile file(TONGSON_FILE)
            //簽名證書文件的密碼
            storePassword TONGSON_STORE_PASSWORD
            //簽名證書中密鑰別名
            keyAlias TONGSON_KEY_ALIAS
            //簽名證書中該密鑰的密碼
            keyPassword TONGSON_KEY_PASSWORD
        }
    }


    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            buildConfigField("String", "debug", "\"${url.debug}\"")
        }

        release {
            if (file(TONGSON_FILE).exists()) {
                signingConfig signingConfigs.release
            }
            buildConfigField("String", "debug", "\"${url.release}\"")

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    afterEvaluate {
//        tasks.matching {
//            it.name.startsWith('dex')
//        }.each { dx ->
//            if (dx.additionalParameters == null) {
//                dx.additionalParameters = []
//            }
//            dx.additionalParameters += '--multi-dex'
//        }
//    }
    //Options
    //https://google.github.io/android-gradle-dsl/current/index.html

    //可以對adb操作選項添加配置
//    adbOptions {
//        //配置操作超時時間，單位毫秒
//        timeOutInMs = 5 * 1000_0
//
//        //adb install 命令的選項配置
//        installOptions '-r', '-s'
//
//    }

    //對dx操作的配置，接收一個DexOptions類型的閉包
//    dexOptions {
//        //配置執行dx命令是為其分配的最大堆內存
//        javaMaxHeapSize '4g'
//        //配置是否預執行 dex Libraries 工程，開啟後會提高增量構建速度，不過會影響clean構建的速度，默認true
//        preDexLibraries = false
//        //配置是否開啟jumbo模式，代碼方法是超過65535需要強制開啟才能構建成功
//        jumboMode true
//        //配置Gradle運行dx命令時使用的線程數量
//        threadCount 8
//
//        additionalParameters = [
//                //多dex分包
//                '--multi-dex',
//                //每個包內方法數上限
//                '--set-max-idx-number=48000',
//                //'--main-dex-list='+'mutidex-config.txt',//打包到主classes.dex的文件列表
//                '--minimal-main-dex'
//        ]
//
//    }

    //執行gradle lint 命令即可運行lint 檢查，默認生成的報告在outputs/lint-results.html中
//    lintOptions {
//        //遇到lint檢查錯誤會終止構建，一般設置為false
//        abortOnError false
//        //將警告當作錯誤來處理
//        warningsAsErrors false
//        //檢查新API
//        check 'NewApi'
//    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    supportDependencies.each {
        k, v -> implementation v
    }

    testImplementation testDependencies.junit
    androidTestImplementation testDependencies.xjunitext
    androidTestImplementation testDependencies.espresso

    if (isRelease) {
        implementation project(path: ':module_welcome')
        implementation project(path: ':module_usersystem')
        implementation project(path: ':module_main')
    }
    implementation project(path: ':base')
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    implementation componentDependencies.component_impl_rx
    annotationProcessor componentDependencies.component_compiler


}
