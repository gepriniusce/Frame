if (isRelease) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
def appId = rootProject.ext.appId
def androidId = rootProject.ext.androidId
def supportDependencies = rootProject.ext.supportDependencies
def testDependencies = rootProject.ext.testDependencies
android {
    compileSdkVersion androidId.compileSdkVersion
    defaultConfig {
        if (!isRelease) {
            applicationId appId.usersystemId
        }
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName
        testInstrumentationRunner androidId.testInstrumentationRunner
        resourcePrefix "usersystem"
        javaCompileOptions {
            annotationProcessorOptions {
                //用户系统模块
                arguments = [HOST: "moduleUserSystem"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //配置資源路徑，方便測試環境，打包不集成到正式環境
    sourceSets {
        main {
            if (isRelease) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //release時debug目錄下文件不需要合併到主工程
                    exclude '**/debug/**'
                }
            } else {
                //集成化模式，整個項目打包apk
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(path: ':base')
    supportDependencies.each {
        k, v -> implementation v
    }

    testImplementation testDependencies.junit
    androidTestImplementation testDependencies.xjunitext
    androidTestImplementation testDependencies.espresso

    //implementation project(path: ':base')

    implementation componentDependencies.component_impl_rx
    annotationProcessor componentDependencies.component_compiler
}
